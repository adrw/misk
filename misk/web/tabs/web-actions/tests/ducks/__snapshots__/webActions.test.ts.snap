// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add a repeated field: addRepeatedField() addNestedRepeated 1`] = `
Immutable.Map {
  "44": Object {
    "id": "44",
    "idChildren": Immutable.Set [
      "45",
    ],
    "idParent": "43",
    "name": "Nested Double Field",
    "repeated": false,
    "serverType": "repeatedDouble",
    "typescriptType": null,
  },
  "45": Object {
    "id": "45",
    "idChildren": Immutable.Set [
      "46",
    ],
    "idParent": "44",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "46": Object {
    "id": "46",
    "idChildren": Immutable.Set [],
    "idParent": "45",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
  "47": Object {
    "id": "47",
    "idChildren": Immutable.Set [
      "48",
    ],
    "idParent": "42",
    "name": "Nested Repeated Double Field",
    "repeated": false,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
  "48": Object {
    "id": "48",
    "idChildren": Immutable.Set [
      "49",
      "51",
    ],
    "idParent": "47",
    "name": "Nested Double Field",
    "repeated": false,
    "serverType": "repeatedDouble",
    "typescriptType": null,
  },
  "49": Object {
    "id": "49",
    "idChildren": Immutable.Set [
      "50",
    ],
    "idParent": "48",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "42",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "50": Object {
    "id": "50",
    "idChildren": Immutable.Set [],
    "idParent": "49",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
  "51": Object {
    "id": "51",
    "idChildren": Immutable.Set [
      "52",
    ],
    "idParent": "48",
    "name": "Nested Double Field",
    "repeated": false,
    "serverType": "repeatedDouble",
    "typescriptType": null,
  },
  "52": Object {
    "id": "52",
    "idChildren": Immutable.Set [
      "53",
    ],
    "idParent": "51",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "42": Object {
    "id": "42",
    "idChildren": Immutable.Set [
      "43",
      "47",
    ],
    "idParent": "0",
    "name": "Nested Repeated Double Field",
    "repeated": true,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
  "53": Object {
    "id": "53",
    "idChildren": Immutable.Set [],
    "idParent": "52",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
  "43": Object {
    "id": "43",
    "idChildren": Immutable.Set [
      "44",
    ],
    "idParent": "42",
    "name": "Nested Repeated Double Field",
    "repeated": false,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
}
`;

exports[`Add a repeated field: addRepeatedField() addRepeated 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "38",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "38": Object {
    "id": "38",
    "idChildren": Immutable.Set [
      "39",
      "40",
      "41",
    ],
    "idParent": "0",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "39": Object {
    "id": "39",
    "idChildren": Immutable.Set [],
    "idParent": "38",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
  "40": Object {
    "id": "40",
    "idChildren": Immutable.Set [],
    "idParent": "38",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
  "41": Object {
    "id": "41",
    "idChildren": Immutable.Set [],
    "idParent": "38",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
}
`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateNested 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "2",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "2": Object {
    "id": "2",
    "idChildren": Immutable.Set [
      "3",
    ],
    "idParent": "0",
    "name": "Nested Int Field",
    "repeated": false,
    "serverType": "noRepeatedInt",
    "typescriptType": null,
  },
  "3": Object {
    "id": "3",
    "idChildren": Immutable.Set [],
    "idParent": "2",
    "name": "Int Field",
    "repeated": false,
    "serverType": "Int",
    "typescriptType": "number",
  },
}
`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateNoNested 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "1",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "1": Object {
    "id": "1",
    "idChildren": Immutable.Set [],
    "idParent": "0",
    "name": "Int Field",
    "repeated": false,
    "serverType": "Int",
    "typescriptType": "number",
  },
}
`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateNonTypedGET 1`] = `Immutable.Map {}`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateNonTypedPOST 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [],
    "idParent": "",
    "name": "",
    "repeated": false,
    "serverType": "JSON",
    "typescriptType": "string",
  },
}
`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateRepeated 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "4",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "4": Object {
    "id": "4",
    "idChildren": Immutable.Set [
      "5",
    ],
    "idParent": "0",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "5": Object {
    "id": "5",
    "idChildren": Immutable.Set [],
    "idParent": "4",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
}
`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateRepeatedNested 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "6",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "6": Object {
    "id": "6",
    "idChildren": Immutable.Set [
      "7",
    ],
    "idParent": "0",
    "name": "Repeated Nested Int Field",
    "repeated": true,
    "serverType": "nestedNoRepeatedInt",
    "typescriptType": null,
  },
  "7": Object {
    "id": "7",
    "idChildren": Immutable.Set [
      "8",
    ],
    "idParent": "6",
    "name": "Repeated Nested Int Field",
    "repeated": false,
    "serverType": "nestedNoRepeatedInt",
    "typescriptType": null,
  },
  "8": Object {
    "id": "8",
    "idChildren": Immutable.Set [
      "9",
    ],
    "idParent": "7",
    "name": "Nested Int Field",
    "repeated": false,
    "serverType": "noRepeatedInt",
    "typescriptType": null,
  },
  "9": Object {
    "id": "9",
    "idChildren": Immutable.Set [],
    "idParent": "8",
    "name": "Int Field",
    "repeated": false,
    "serverType": "Int",
    "typescriptType": "number",
  },
}
`;

exports[`Build typesMetadata from a raw WebActionMetadata: generateTypesMetadata() generateRepeatedNestedRepeated 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "10",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "10": Object {
    "id": "10",
    "idChildren": Immutable.Set [
      "11",
    ],
    "idParent": "0",
    "name": "Nested Repeated Double Field",
    "repeated": true,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
  "11": Object {
    "id": "11",
    "idChildren": Immutable.Set [
      "12",
    ],
    "idParent": "10",
    "name": "Nested Repeated Double Field",
    "repeated": false,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
  "12": Object {
    "id": "12",
    "idChildren": Immutable.Set [
      "13",
    ],
    "idParent": "11",
    "name": "Nested Double Field",
    "repeated": false,
    "serverType": "repeatedDouble",
    "typescriptType": null,
  },
  "13": Object {
    "id": "13",
    "idChildren": Immutable.Set [
      "14",
    ],
    "idParent": "12",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "14": Object {
    "id": "14",
    "idChildren": Immutable.Set [],
    "idParent": "13",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
}
`;

exports[`Get formatted form data: getFieldData() getNested 1`] = `
Object {
  "Nested Int Field": Object {
    "Int Field": 123456,
  },
}
`;

exports[`Get formatted form data: getFieldData() getNoNested 1`] = `
Object {
  "Int Field": 123456,
}
`;

exports[`Get formatted form data: getFieldData() getNonTypedPOST 1`] = `"Alpha"`;

exports[`Get formatted form data: getFieldData() getRepeated 1`] = `
Object {
  "Repeated Double Field": Array [
    -123.456,
    456.789,
  ],
}
`;

exports[`Get formatted form data: getFieldData() getRepeatedNested 1`] = `
Object {
  "Repeated Nested Int Field": Array [
    Object {
      "Nested Int Field": Object {
        "Int Field": -123456,
      },
    },
    Object {
      "Nested Int Field": Object {
        "Int Field": 456789,
      },
    },
  ],
}
`;

exports[`Get formatted form data: getFieldData() getRepeatedNestedRepeated 1`] = `
Object {
  "Nested Repeated Double Field": Array [
    Object {
      "Nested Double Field": Object {
        "Repeated Double Field": Array [
          -123.456,
        ],
      },
    },
    Object {
      "Nested Double Field": Object {
        "Repeated Double Field": Array [
          456.789,
          -789.123,
        ],
      },
    },
  ],
}
`;

exports[`Remove a repeated field: removeRepeatedField() removeNestedRepeated 1`] = `
Immutable.Map {
  "57": Object {
    "id": "57",
    "idChildren": Immutable.Set [
      "58",
    ],
    "idParent": "0",
    "name": "Nested Repeated Double Field",
    "repeated": true,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
  "58": Object {
    "id": "58",
    "idChildren": Immutable.Set [
      "59",
    ],
    "idParent": "57",
    "name": "Nested Repeated Double Field",
    "repeated": false,
    "serverType": "nestedRepeatedDouble",
    "typescriptType": null,
  },
  "59": Object {
    "id": "59",
    "idChildren": Immutable.Set [
      "60",
    ],
    "idParent": "58",
    "name": "Nested Double Field",
    "repeated": false,
    "serverType": "repeatedDouble",
    "typescriptType": null,
  },
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "57",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "60": Object {
    "id": "60",
    "idChildren": Immutable.Set [
      "61",
    ],
    "idParent": "59",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "61": Object {
    "id": "61",
    "idChildren": Immutable.Set [],
    "idParent": "60",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
}
`;

exports[`Remove a repeated field: removeRepeatedField() removeRepeated 1`] = `
Immutable.Map {
  "0": Object {
    "id": "0",
    "idChildren": Immutable.Set [
      "54",
    ],
    "idParent": "0",
    "name": "",
    "repeated": false,
    "serverType": null,
    "typescriptType": null,
  },
  "54": Object {
    "id": "54",
    "idChildren": Immutable.Set [
      "55",
    ],
    "idParent": "0",
    "name": "Repeated Double Field",
    "repeated": true,
    "serverType": "Double",
    "typescriptType": null,
  },
  "55": Object {
    "id": "55",
    "idChildren": Immutable.Set [],
    "idParent": "54",
    "name": "Repeated Double Field",
    "repeated": false,
    "serverType": "Double",
    "typescriptType": "number",
  },
}
`;
