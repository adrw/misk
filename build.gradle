ext {
  isCi = "true".equals(System.getenv('CI'))
  isSqCi = "true".equals(System.getenv('SQCI'))
  rep = null
}
apply from: file("./dependencies.gradle")

if (rootProject.file("repositories.gradle").exists()) {
  apply from: rootProject.file("repositories.gradle")
}

subprojects {
  buildscript {
    repositories {
      mavenCentral()
      jcenter()
      if (rep != null) {
        if (rep.maven) {
          for (Map.Entry<String, String> repEntry : rep.maven) {
            println(repEntry.value)
            maven {
              url repEntry.value
            }
          }
        }
      }
    }

    dependencies {
      classpath dep.kotlinGradlePlugin
      classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
      classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
      classpath 'com.vanniktech:gradle-maven-publish-plugin:0.4.0'
    }
  }
  repositories {
    mavenCentral()
    jcenter()
    if (rep != null) {
      if (rep.maven) {
        for (Map.Entry<String, String> repEntry : rep.maven) {
          println(repEntry.value)
          maven {
            url repEntry.value
          }
        }
      }
    }
  }
}

